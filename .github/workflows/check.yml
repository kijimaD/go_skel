name: ⚗️Check

on:
  push:

env:
  GH_TOKEN: ${{ secrets.WRITE_PACKAGE }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.21.0"
      - name: build
        run: make build

  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.21.0"
      - name: run
        run: make run

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.21.0"
      - name: test
        run: make test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.21.0"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          args: --verbose
          version: v1.54

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.21.0"
      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@${GOIMPORTS_VERSION}
        env:
          GOIMPORTS_VERSION: v0.9.1
      - name: format
        run: goimports -l -w -local .
      - name: check change
        run: |
          git status -s
          test -z "$(git status -s)"

  image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get git tag(short)
        id: git-tag
        run: |
          GIT_TAG=$(git rev-parse --short HEAD)
          echo "::set-output name=git-tag::$GIT_TAG"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.WRITE_PACKAGE }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image for release
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          target: release
          push: true
          tags: ghcr.io/kijimad/go_skel:${{ steps.git-tag.outputs.git-tag }},ghcr.io/kijimad/go_skel:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        if: github.ref == 'refs/heads/main'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
